__author__ = 'prossi'


class Lookups:
    def __init__(self):
        self.relationship_lookup = {
            'abort': ['abort', 'Abort this blocking task.', 'POST'],
            'add': ['add', 'Add an item to this container.', 'POST'],
            'alternate': ['alternate', 'References an alternate representation of this object.', 'GET'],
            'answer': ['answer', 'Provide user input requested by a virtual machine.', 'POST'],
            'authorization:check': ['authorization:check', 'Check whether an extension service operation is authorized for an entity.', 'POST'],
            'blockingTask': ['blockingTask', 'A list of pending blocking task requests in this cloud.', 'GET'],
            'bundle:upload': ['bundle:upload', 'Upload an extension service localization bundle.', 'PUT'],
            'bundles:cleanup': ['bundles:cleanup', 'Remove unused extension service localization bundles.', 'POST'],
            'catalogItem': ['catalogItem', 'References the CatalogItem object that refers to this object.', 'GET'],
            'certificate:reset': ['certificate:reset', 'Removes the SSL certificate used by this service.', 'POST'],
            'certificate:update': ['certificate:update', 'Updates the SSL certificate used by this service.', 'POST'],
            'checkCompliance': ['checkCompliance', 'Check that this virtual machine is using a storage profile of the intended type.', 'POST'],
            'consolidate': ['consolidate', 'Consolidate this virtual machine.', 'POST'],
            'controlAccess': ['controlAccess', 'Apply access controls to this object.', 'POST'],
            'copy': ['copy', 'Reserved', 'N/A'],
            'customizeAtNextPowerOn': ['customizeAtNextPowerOn', 'Force guest customization to be applied the next time this virtual machine is powered on.', 'POST'],
            'deploy': ['deploy', 'Deploy this vApp.', 'POST'],
            'disable': ['disable', 'Disable this object.', 'POST'],
            'discardState': ['discardState', 'Discard the suspended state of this virtual machine.', 'POST'],
            'disk:attach': ['disk:attach', 'Attach an independent disk to this virtual machine.', 'POST'],
            'disk:detach': ['disk:detach', 'Detach an independent disk from this virtual machine.', 'POST'],
            'down': ['down', 'References an object contained by this object.', 'GET'],
            'down:aclRules': ['down:aclRules', 'Retrieve the ACL rules for this resource class action.', 'GET'],
            'down:apidefinitions': ['down:apidefinitions', 'Retrieve the API definitions for this extension service.', 'GET'],
            'down:apiDefinitions': ['down:apiDefinitions', 'Retrieve the API definitions for this extension service.', 'GET'],
            'down:apiFilters': ['down:apiFilters', 'Retrieve the API filters for this extension service.', 'GET'],
            'down:extensibility': ['down:extensibility', 'Add an extension service to the system.', 'POST'],
            'down:fileDescriptors': ['down:fileDescriptors', 'Retrieve file descriptors for extension services APIs', 'GET'],
            'down:files': ['down:files', 'Retrieve files for extension services APIs', 'GET'],
            'down:resourceClassActions': ['down:resourceClassActions', 'Retrieve the actions defined for this extension service resource class.', 'GET'],
            'down:resourceClasses': ['down:resourceClasses', 'Retrieve the resource classes defined by this extension service.', 'GET'],
            'down:serviceLinks': ['down:serviceLinks', 'Retrieve the service links defined by this extension service.', 'GET'],
            'down:serviceResources': ['down:serviceResources', 'Retrieve the list of extension service resources of this class.', ''],
            'down:services': ['down:services', 'Retrieve the list of registered extension services.', 'GET'],
            'download:alternate': ['download:alternate', 'Reserved', 'N/A'],
            'download:default': ['download:default', 'References the default location from which this file can be downloaded.', 'GET'],
            'download:identity': ['download:identity', 'References the extended OVF descriptor of this vApp template. The extended OVF descriptor contains additional information such as MAC address, BIOS UUID, and NetworkConfigSection', 'GET'],
            'edgeGateway:configureServices': ['edgeGateway:configureServices', 'Update the network services offered by this Edge Gateway.', 'POST'],
            'edgeGateway:reapplyServices': ['edgeGateway:reapplyServices', 'Reapply (after an update) the network services offered by this Edge Gateway.', 'POST'],
            'edgeGateway:redeploy': ['edgeGateway:redeploy', 'Redeploy the vShield Edge supporting this Edge Gateway.', 'POST'],
            'edgeGateway:syncSyslogSettings': ['edgeGateway:syncSyslogSettings', 'Synchronize syslog server addresses used by this Edge Gateway with system defaults.', 'POST'],
            'edgeGateway:upgrade': ['edgeGateway:upgrade', 'Upgrade the backing configuration of this Edge Gateway from compact to full.', 'POST'],
            'edgeGateways': ['edgeGateways', 'List the Edge Gateway objects in this organization VDC.', 'GET'],
            'edit': ['edit', 'Modify this object, typically by replacing its current representation with the one in the request body.', 'PUT'],
            'enable': ['enable', 'Enable this object.', 'POST'],
            'enterMaintenanceMode': ['enterMaintenanceMode', 'Put this virtual machine into maintenance mode.', 'POST'],
            'entity': ['entity', 'Retrieve a representation of the object on which an operation triggered this notification.', 'GET'],
            'entityResolver': ['entityResolver', 'Retrieve an object id as a context-free Entity element.', 'GET'],
            'event:create': ['event:create', 'Create an event in an this organizations event stream.', 'POST'],
            'exitMaintenanceMode': ['exitMaintenanceMode', 'Take this virtual machine out of maintenance mode.', 'POST'],
            'fail': ['fail', 'Fail this blocking task.', 'POST'],
            'firstPage': ['firstPage', 'Reference to the first page of a paginated response.', 'GET'],
            'installVmwareTools': ['installVmwareTools', 'Install VMware Tools on this virtual machine.', 'POST'],
            'keystore:reset': ['keystore:reset', 'Removes the keystore used by this service.', 'POST'],
            'keystore:update': ['keystore:update', 'Updates the keystore used by this service.', 'POST'],
            'keytab:reset': ['keytab:reset', 'Removes the keytab used by this service.', 'POST'],
            'keytab:update': ['keytab:update', 'Updates the keytab used by this service.', 'POST'],
            'lastPage': ['lastPage', 'Reference to the last page of a paginated response.', 'GET'],
            'media:ejectMedia': ['media:ejectMedia', 'Eject virtual media from a virtual device.', 'POST'],
            'media:insertMedia': ['media:insertMedia', 'Insert virtual media into a virtual device.', 'POST'],
            'metrics': ['metrics', 'Retrieve a subset of current or historic metrics from a virtual machine', 'POST'],
            'merge': ['merge', 'Merge one or more Provider VDCs with this Provider VDC.', 'POST'],
            'migrateVms': ['migrateVms', 'Migrate virtual machines from this resource pool to a different one.', 'POST'],
            'move': ['move', 'Reserved', 'N/A'],
            'nextPage': ['nextPage', 'Reference to the next page of a paginated response.', 'GET'],
            'orgVdcNetworks': ['orgVdcNetworks', 'List the organization VDC networks supported by this Edge Gateway.', 'GET'],
            'ova': ['ova', 'Reserved', 'N/A'],
            'ovf': ['ovf', 'References the OVF descriptor of this vApp template.', 'GET'],
            'power:powerOff': ['power:powerOff', 'Power off this vApp or virtual machine.', 'POST'],
            'power:powerOn': ['power:powerOn', 'Power on this vApp or virtual machine.', 'POST'],
            'power:reboot': ['power:reboot', 'Reboot this vApp or virtual machine.', 'POST'],
            'power:reset': ['power:reset', 'Reset this vApp or virtual machine.', 'POST'],
            'power:shutdown': ['power:shutdown', 'Shut down this vApp or virtual machine.', 'POST'],
            'power:suspend': ['power:suspend', 'Suspend this vApp or virtual machine.', 'POST'],
            'previousPage': ['previousPage', 'Reference to the previous page of a paginated response.', 'GET'],
            'publish': ['publish', 'Share this catalog.', 'POST'],
            'publishToExternalOrganizations': ['publishToExternalOrganizations', 'Publish this catalog externally', 'POST'],
            'recompose': ['recompose', 'Recompose this vApp to add, remove, or reconfigure virtual machines.', 'POST'],
            'reconfigureVm': ['reconfigureVm', 'Update multiple sections of a virtual machine.', 'POST'],
            'reconnect': ['reconnect', 'Reconnect this vCenter Server to the system.', 'POST'],
            'refreshStorageProfiles': ['refreshStorageProfiles', 'Refresh the list of storage profiles that exist on the vCenter service backing this Provider VDC.', 'POST'],
            'refreshVirtualCenter': ['refreshVirtualCenter', 'Refresh the representation of this vCenter server', 'POST'],
            'register': ['register', 'Register a VCenter Server with the system.', 'POST'],
            'reloadFromVc': ['reloadFromVc', 'Reload certain properties of this virtual machine from the vCenter database.', 'POST'],
            'relocate': ['relocate', 'Relocate this virtual machine.', 'POST'],
            'remove': ['remove', 'Remove this object.', 'DELETE'],
            'remove:force': ['remove:force', 'Force removal of this object.', 'DELETE'],
            'repair': ['repair', 'Repair this host or network.', 'POST'],
            'resourcePoolVmList': ['resourcePoolVmList', 'List the virtual machines using this resource pool.', 'GET'],
            'resume': ['resume', 'Resume this blocking task.', 'POST'],
            'rights': ['rights', 'List the service-specific rights created by this extension service.', 'GET'],
            'rights:cleanup': ['rights:cleanup', 'Remove service-specific rights no longer used by any extension service.', 'POST'],
            'screen:acquireTicket': ['screen:acquireTicket', 'Retrieve a screen ticket for this virtual machine.', 'GET'],
            'screen:thumbnail': ['screen:thumbnail', 'Retrieve a thumbnail view of the screen of this virtual machine.', 'GET'],
            'shadowVms': ['shadowVms', 'List shadow virtual machines associated with the virtual machines in this vApp template.', 'GET'],
            'snapshot:create': ['snapshot:create', 'Create a snapshot of the virtual machines in this vApp.', 'POST'],
            'snapshot:removeAll': ['snapshot:removeAll', 'Remove all snapshots created for the virtual machines in this vApp.', 'POST'],
            'snapshot:revertToCurrent': ['snapshot:revertToCurrent', 'Revert all virtual machines in this vApp to their current snapshot.', 'POST'],
            'storageProfile': ['storageProfile', 'References the storage profile for this object.', 'GET'],
            'subscribeToExternalCatalog': ['subscribeToExternalCatalog', 'Add an external subscription to this catalog.', 'POST'],
            'sync': ['sync', 'Synchronize this catalog or catalog item with its external source.', 'POST'],
            'syncSyslogSettings': ['syncSyslogSettings', 'Synchronize syslog server addresses used by this vApp network with system defaults.', 'POST'],
            'takeOwnership': ['takeOwnership', 'Take ownership of this users vApps, media, and catalogs.', 'POST'],
            'task': ['task', 'Retrieve the blocking task that triggered this notification.', 'GET'],
            'task:cancel': ['task:cancel', 'Cancel this task.', 'POST'],
            'task:create': ['task:create', 'Create a task object.', 'POST'],
            'task:owner': ['task:owner', 'Reference to the owner of a task.', 'GET'],
            'truststore:reset': ['truststore:reset', 'Remove the truststore used by this service.', 'POST'],
            'truststore:update': ['truststore:update', 'Update the truststore used by this service.', 'PUT'],
            'undeploy': ['undeploy', 'Undeploy this vApp.', 'POST'],
            'unlock': ['unlock', 'Unlock this user account.', 'POST'],
            'unregister': ['unregister', 'Unregister this vCenter Server.', 'POST'],
            'up': ['up', 'References an object that contains this object.', 'GET'],
            'update:resourcePools': ['update:resourcePools', 'Update the resource pools of this Provider VDC', 'POST'],
            'updateProgress': ['updateProgress', 'Request an update of this tasks progress.', 'POST'],
            'upgrade': ['upgrade', 'Upgrade this host.', 'POST'],
            'upload:alternate': ['upload:alternate', 'Reserved', 'N/A'],
            'upload:default': ['upload:default', 'References the default location to which this object can be uploaded.', 'PUT'],
            'vSphereWebClientUrl': ['vSphereWebClientUrl', 'A URL that you can use to view this object with the vSphere Web Client', 'GET'],
        }

    def get_relationship(self, name):
        return self.relationship_lookup.get(name, [])